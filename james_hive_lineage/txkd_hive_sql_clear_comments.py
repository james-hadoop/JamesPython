import datetime
import re
import datetime
import sys

import configobj
import pymysql
import json
import os
import re
import base64

import sqlparse


def clean_sql_comments(sql):
    sql_out = re.subn('\-\-.*?TOK_BACKSLASH_N', 'TOK_BACKSLASH_N', sql)[0]

    return sql_out


def main():
    sql_in = 'INSERT table sng_mp_etldata::dwa_cc_sanduan_low_exp_uv_details_dTOK_BACKSLASH_N select f_date, type, app_id, low_exp, low_exp_7d, total_exp, TOK_BACKSLASH_N first_low_exp, first_low_exp_1d, first_low_exp_2d, first_low_exp_7d,TOK_BACKSLASH_N second_low_exp, second_low_exp_3d, second_low_exp_4d, second_low_exp_7d,TOK_BACKSLASH_N trd_low_exp, trd_low_exp_7d,TOK_BACKSLASH_N cnt100, exp100, cnt1k, exp1k, cnt1w, exp1w, cnt10w, exp10w, cnt100w, exp100w, cnt100wplus, exp100wplus,TOK_BACKSLASH_N cnt100_7d, exp100_7d, cnt1k_7d, exp1k_7d, cnt1w_7d, exp1w_7d, cnt10w_7d, exp10w_7d, cnt100w_7d, TOK_BACKSLASH_N exp100w_7d, cnt100wplus_7d, exp100wplus_7d,TOK_BACKSLASH_N low_uv, first_pop_cnt, first_pop_time, second_pop_cnt, second_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N (-- 纯图文TOK_BACKSLASH_N select a.f_date f_date, TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTE type, a.sp_app_id app_id, low_exp, low_exp_7d, total_exp, TOK_BACKSLASH_N first_low_exp, first_low_exp_1d, first_low_exp_2d, first_low_exp_7d,TOK_BACKSLASH_N second_low_exp, second_low_exp_3d, second_low_exp_4d, second_low_exp_7d,TOK_BACKSLASH_N trd_low_exp, trd_low_exp_7d,TOK_BACKSLASH_N cnt100, exp100, cnt1k, exp1k, cnt1w, exp1w, cnt10w, exp10w, cnt100w, exp100w, cnt100wplus, exp100wplus,TOK_BACKSLASH_N cnt100_7d, exp100_7d, cnt1k_7d, exp1k_7d, cnt1w_7d, exp1w_7d, cnt10w_7d, exp10w_7d, cnt100w_7d, TOK_BACKSLASH_N exp100w_7d, cnt100wplus_7d, exp100wplus_7d,TOK_BACKSLASH_N exp_uv low_uv, first_pop_cnt, first_pop_time, second_pop_cnt, second_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N -- 低质曝光TOK_BACKSLASH_N (select 20200630 f_date, p.sp_app_id sp_app_id, TOK_BACKSLASH_N first_low_exp+NVL(second_low_exp,0)+trd_low_exp low_exp, TOK_BACKSLASH_N first_low_exp_7d+NVL(second_low_exp_7d,0)+trd_low_exp_7d low_exp_7d,TOK_BACKSLASH_N first_low_exp, first_low_exp_1d, first_low_exp+first_low_exp_1d first_low_exp_2d, first_low_exp_7d,TOK_BACKSLASH_N NVL(second_low_exp,0) second_low_exp, NVL(second_low_exp_3d,0) second_low_exp_3d, TOK_BACKSLASH_N NVL(second_low_exp,0)+NVL(second_low_exp_3d,0) second_low_exp_4d, NVL(second_low_exp_7d,0) second_low_exp_7d,TOK_BACKSLASH_N trd_low_exp, trd_low_exp_7d,TOK_BACKSLASH_N cnt100, exp100, cnt1k, exp1k, cnt1w, exp1w, cnt10w, exp10w, cnt100w, exp100w, cnt100wplus, exp100wplus,TOK_BACKSLASH_N cnt100_7d, exp100_7d, cnt1k_7d, exp1k_7d, cnt1w_7d, exp1w_7d, cnt10w_7d, exp10w_7d, cnt100w_7d, TOK_BACKSLASH_N exp100w_7d, cnt100wplus_7d, exp100wplus_7dTOK_BACKSLASH_N from TOK_BACKSLASH_N (-- 一次popTOK_BACKSLASH_N select sp_app_id,TOK_BACKSLASH_N sum(first_exp_d) first_low_exp,TOK_BACKSLASH_N sum(first_exp_1d) first_low_exp_1d,TOK_BACKSLASH_N sum(first_exp_7d) first_low_exp_7d,TOK_BACKSLASH_N -- 当日流量分布TOK_BACKSLASH_N count(distinct case when first_exp_d between 1 and 100 then rowkey end) cnt100,TOK_BACKSLASH_N sum(case when first_exp_d between 1 and 100 then first_exp_d end) exp100,TOK_BACKSLASH_N count(distinct case when first_exp_d between 101 and 1000 then rowkey end) cnt1k,TOK_BACKSLASH_N sum(case when first_exp_d between 101 and 1000 then first_exp_d end) exp1k,TOK_BACKSLASH_N count(distinct case when first_exp_d between 1001 and 10000 then rowkey end) cnt1w,TOK_BACKSLASH_N sum(case when first_exp_d between 1001 and 10000 then first_exp_d end) exp1w,TOK_BACKSLASH_N count(distinct case when first_exp_d between 10001 and 100000 then rowkey end) cnt10w,TOK_BACKSLASH_N sum(case when first_exp_d between 10001 and 100000 then first_exp_d end) exp10w,TOK_BACKSLASH_N count(distinct case when first_exp_d between 100001 and 1000000 then rowkey end) cnt100w,TOK_BACKSLASH_N NVL(sum(case when first_exp_d between 100001 and 1000000 then first_exp_d end), 0) exp100w,TOK_BACKSLASH_N count(distinct case when first_exp_d > 1000000 then rowkey end) cnt100wplus,TOK_BACKSLASH_N NVL(sum(case when first_exp_d > 1000000 then first_exp_d end), 0) exp100wplus,TOK_BACKSLASH_N -- 7天流量分布TOK_BACKSLASH_N count(distinct case when first_exp_7d between 1 and 100 then rowkey end) cnt100_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 1 and 100 then first_exp_7d end) exp100_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 101 and 1000 then rowkey end) cnt1k_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 101 and 1000 then first_exp_7d end) exp1k_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 1001 and 10000 then rowkey end) cnt1w_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 1001 and 10000 then first_exp_7d end) exp1w_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 10001 and 100000 then rowkey end) cnt10w_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 10001 and 100000 then first_exp_7d end) exp10w_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 100001 and 1000000 then rowkey end) cnt100w_7d,TOK_BACKSLASH_N NVL(sum(case when first_exp_7d between 100001 and 1000000 then first_exp_7d end), 0) exp100w_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d > 1000000 then rowkey end) cnt100wplus_7d,TOK_BACKSLASH_N NVL(sum(case when first_exp_7d > 1000000 then first_exp_7d end), 0) exp100wplus_7dTOK_BACKSLASH_N fromTOK_BACKSLASH_N (select a.rowkey rowkey, sp_app_id, first_exp_d, first_exp_1d, first_exp_7dTOK_BACKSLASH_N fromTOK_BACKSLASH_N (select rowkeyTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_article_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_fst_filter = 1 and from_unixtime(cast(substr(timestamp_pop_fst_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N ) aTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (select rowkey, sp_app_id,TOK_BACKSLASH_N sum(case when p_date=20200630 then maintl_exp_cnt else 0 end) first_exp_d, -- 当天TOK_BACKSLASH_N sum(case when p_date=date_sub(20200630, 1) then maintl_exp_cnt else 0 end) first_exp_1d, -- 前一天TOK_BACKSLASH_N sum(maintl_exp_cnt) first_exp_7d -- 过去7天TOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_article_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date between date_sub(20200630, 6) and 20200630TOK_BACKSLASH_N group by rowkey, sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.rowkey = b.rowkeyTOK_BACKSLASH_N ) m TOK_BACKSLASH_N where sp_app_id is not nullTOK_BACKSLASH_N group by sp_app_idTOK_BACKSLASH_N ) p TOK_BACKSLASH_N left joinTOK_BACKSLASH_N (-- 二次popTOK_BACKSLASH_N select sp_app_id, TOK_BACKSLASH_N sum(second_exp_d) second_low_exp,TOK_BACKSLASH_N sum(second_exp_3d) second_low_exp_3d,TOK_BACKSLASH_N sum(second_exp_7d) second_low_exp_7dTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkeyTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_article_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_sec_filter = 1 and from_unixtime(cast(substr(timestamp_pop_sec_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N ) aTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (select rowkey, sp_app_id,TOK_BACKSLASH_N sum(case when p_date=20200630 then maintl_exp_cnt else 0 end) second_exp_d, -- 当天TOK_BACKSLASH_N sum(case when p_date between date_sub(20200630, 3) and date_sub(20200630, 1) then maintl_exp_cnt else 0 end) second_exp_3d, -- 前三天TOK_BACKSLASH_N sum(maintl_exp_cnt) second_exp_7d -- 过去7天TOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_article_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date between date_sub(20200630, 6) and 20200630TOK_BACKSLASH_N group by rowkey, sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.rowkey = b.rowkeyTOK_BACKSLASH_N group by sp_app_idTOK_BACKSLASH_N ) q TOK_BACKSLASH_N on p.sp_app_id = q.sp_app_idTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (-- 先发后审，初审下架TOK_BACKSLASH_N select sp_app_id, TOK_BACKSLASH_N sum(trd_exp_d) trd_low_exp,TOK_BACKSLASH_N sum(trd_exp_7d) trd_low_exp_7dTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkeyTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_article_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (send_audit_type in (3, 4) and metrics_asn_human_pass = 0 and from_unixtime(cast(substr(timestamp_asn_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630)TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N ) aTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (select rowkey, sp_app_id,TOK_BACKSLASH_N sum(case when p_date=20200630 then maintl_exp_cnt else 0 end) trd_exp_d, -- 当天TOK_BACKSLASH_N sum(maintl_exp_cnt) trd_exp_7d -- 过去7天TOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_article_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date between date_sub(20200630, 6) and 20200630TOK_BACKSLASH_N group by rowkey, sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.rowkey = b.rowkeyTOK_BACKSLASH_N group by sp_app_idTOK_BACKSLASH_N ) sTOK_BACKSLASH_N on p.sp_app_id = s.sp_app_id TOK_BACKSLASH_N ) a TOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 大盘曝光TOK_BACKSLASH_N (select sp_app_id, sum(maintl_exp_cnt) total_expTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkeyTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_article_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N ) p TOK_BACKSLASH_N left join TOK_BACKSLASH_N (select sp_app_id, rowkey, maintl_exp_cntTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_article_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N ) q TOK_BACKSLASH_N on p.rowkey = q.rowkey TOK_BACKSLASH_N group by sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.sp_app_id = b.sp_app_idTOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 低质曝光uvTOK_BACKSLASH_N (select sp_app_id, exp_uvTOK_BACKSLASH_N from TOK_BACKSLASH_N (select TOK_SINGLE_QUOTEkdTOK_SINGLE_QUOTE sp_app_id, exp_uv TOK_BACKSLASH_N from sng_mp_etldata::dwa_cc_kd_low_exp_uv_okr_dailyTOK_BACKSLASH_N where f_date = 20200630TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N and low_type = TOK_SINGLE_QUOTE1TOK_SINGLE_QUOTETOK_BACKSLASH_N union all TOK_BACKSLASH_N select TOK_SINGLE_QUOTEkbTOK_SINGLE_QUOTE sp_app_id, exp_uvTOK_BACKSLASH_N from sng_mp_etldata::dwa_cc_kb_low_exp_uv_okr_dailyTOK_BACKSLASH_N where f_date = 20200630TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N and low_type = TOK_SINGLE_QUOTE1TOK_SINGLE_QUOTETOK_BACKSLASH_N union all TOK_BACKSLASH_N select TOK_SINGLE_QUOTEqbTOK_SINGLE_QUOTE sp_app_id, exp_uv TOK_BACKSLASH_N from sng_mp_etldata::dwa_cc_qb_low_exp_uv_okr_dailyTOK_BACKSLASH_N where f_date = 20200630TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N and low_type = TOK_SINGLE_QUOTE1TOK_SINGLE_QUOTETOK_BACKSLASH_N )TOK_BACKSLASH_N ) c TOK_BACKSLASH_N on a.sp_app_id = c.sp_app_idTOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 一次pop下架内容数、审核时长 TOK_BACKSLASH_N (select 20200630 f_date,TOK_BACKSLASH_N count(distinct rowkey) first_pop_cnt, TOK_BACKSLASH_N NVL(round(sum(duration_pop_fst_audit)/1000, 1), 0.0) first_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, duration_pop_fst_auditTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_article_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_fst_filter = 1 and from_unixtime(cast(substr(timestamp_pop_fst_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N ) TOK_BACKSLASH_N ) d TOK_BACKSLASH_N on a.f_date = d.f_dateTOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 二次pop下架内容数、审核时长 TOK_BACKSLASH_N (select 20200630 f_date,TOK_BACKSLASH_N count(distinct rowkey) second_pop_cnt, TOK_BACKSLASH_N NVL(round(sum(duration_pop_sec_audit)/1000, 1), 0.0) second_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, duration_pop_sec_auditTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_article_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_sec_filter = 1 and from_unixtime(cast(substr(timestamp_pop_sec_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type = TOK_SINGLE_QUOTE图文TOK_SINGLE_QUOTETOK_BACKSLASH_N ) TOK_BACKSLASH_N ) e TOK_BACKSLASH_N on a.f_date = e.f_date TOK_BACKSLASH_NTOK_BACKSLASH_N union all TOK_BACKSLASH_N -- 视频TOK_BACKSLASH_N select a.f_date f_date, a.content_type type, a.sp_app_id app_id, low_exp, low_exp_7d, total_exp, TOK_BACKSLASH_N first_low_exp, first_low_exp_1d, first_low_exp_2d, first_low_exp_7d,TOK_BACKSLASH_N second_low_exp, second_low_exp_3d, second_low_exp_4d, second_low_exp_7d,TOK_BACKSLASH_N trd_low_exp, trd_low_exp_7d,TOK_BACKSLASH_N cnt100, exp100, cnt1k, exp1k, cnt1w, exp1w, cnt10w, exp10w, cnt100w, exp100w, cnt100wplus, exp100wplus,TOK_BACKSLASH_N cnt100_7d, exp100_7d, cnt1k_7d, exp1k_7d, cnt1w_7d, exp1w_7d, cnt10w_7d, exp10w_7d, cnt100w_7d, TOK_BACKSLASH_N exp100w_7d, cnt100wplus_7d, exp100wplus_7d,TOK_BACKSLASH_N exp_uv low_uv, first_pop_cnt, first_pop_time, second_pop_cnt, second_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N -- 低质曝光TOK_BACKSLASH_N (select 20200630 f_date, p.sp_app_id sp_app_id, p.content_type content_type,TOK_BACKSLASH_N first_low_exp+NVL(second_low_exp,0)+trd_low_exp low_exp, TOK_BACKSLASH_N first_low_exp_7d+NVL(second_low_exp_7d,0)+trd_low_exp_7d low_exp_7d,TOK_BACKSLASH_N first_low_exp, first_low_exp_1d, first_low_exp+first_low_exp_1d first_low_exp_2d, first_low_exp_7d,TOK_BACKSLASH_N NVL(second_low_exp,0) second_low_exp, NVL(second_low_exp_3d,0) second_low_exp_3d, TOK_BACKSLASH_N NVL(second_low_exp,0)+NVL(second_low_exp_3d,0) second_low_exp_4d, NVL(second_low_exp_7d,0) second_low_exp_7d,TOK_BACKSLASH_N trd_low_exp, trd_low_exp_7d,TOK_BACKSLASH_N cnt100, exp100, cnt1k, exp1k, cnt1w, exp1w, cnt10w, exp10w, cnt100w, exp100w, cnt100wplus, exp100wplus,TOK_BACKSLASH_N cnt100_7d, exp100_7d, cnt1k_7d, exp1k_7d, cnt1w_7d, exp1w_7d, cnt10w_7d, exp10w_7d, cnt100w_7d, TOK_BACKSLASH_N exp100w_7d, cnt100wplus_7d, exp100wplus_7dTOK_BACKSLASH_N from TOK_BACKSLASH_N (-- 一次popTOK_BACKSLASH_N select sp_app_id,TOK_BACKSLASH_N content_type,TOK_BACKSLASH_N sum(first_exp_d) first_low_exp,TOK_BACKSLASH_N sum(first_exp_1d) first_low_exp_1d,TOK_BACKSLASH_N sum(first_exp_7d) first_low_exp_7d,TOK_BACKSLASH_N -- 当日流量分布TOK_BACKSLASH_N count(distinct case when first_exp_d between 1 and 100 then rowkey end) cnt100,TOK_BACKSLASH_N sum(case when first_exp_d between 1 and 100 then first_exp_d end) exp100,TOK_BACKSLASH_N count(distinct case when first_exp_d between 101 and 1000 then rowkey end) cnt1k,TOK_BACKSLASH_N sum(case when first_exp_d between 101 and 1000 then first_exp_d end) exp1k,TOK_BACKSLASH_N count(distinct case when first_exp_d between 1001 and 10000 then rowkey end) cnt1w,TOK_BACKSLASH_N sum(case when first_exp_d between 1001 and 10000 then first_exp_d end) exp1w,TOK_BACKSLASH_N count(distinct case when first_exp_d between 10001 and 100000 then rowkey end) cnt10w,TOK_BACKSLASH_N sum(case when first_exp_d between 10001 and 100000 then first_exp_d end) exp10w,TOK_BACKSLASH_N count(distinct case when first_exp_d between 100001 and 1000000 then rowkey end) cnt100w,TOK_BACKSLASH_N NVL(sum(case when first_exp_d between 100001 and 1000000 then first_exp_d end), 0) exp100w,TOK_BACKSLASH_N count(distinct case when first_exp_d > 1000000 then rowkey end) cnt100wplus,TOK_BACKSLASH_N NVL(sum(case when first_exp_d > 1000000 then first_exp_d end), 0) exp100wplus,TOK_BACKSLASH_N -- 7天流量分布TOK_BACKSLASH_N count(distinct case when first_exp_7d between 1 and 100 then rowkey end) cnt100_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 1 and 100 then first_exp_7d end) exp100_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 101 and 1000 then rowkey end) cnt1k_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 101 and 1000 then first_exp_7d end) exp1k_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 1001 and 10000 then rowkey end) cnt1w_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 1001 and 10000 then first_exp_7d end) exp1w_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 10001 and 100000 then rowkey end) cnt10w_7d,TOK_BACKSLASH_N sum(case when first_exp_7d between 10001 and 100000 then first_exp_7d end) exp10w_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d between 100001 and 1000000 then rowkey end) cnt100w_7d,TOK_BACKSLASH_N NVL(sum(case when first_exp_7d between 100001 and 1000000 then first_exp_7d end), 0) exp100w_7d,TOK_BACKSLASH_N count(distinct case when first_exp_7d > 1000000 then rowkey end) cnt100wplus_7d,TOK_BACKSLASH_N NVL(sum(case when first_exp_7d > 1000000 then first_exp_7d end), 0) exp100wplus_7dTOK_BACKSLASH_N fromTOK_BACKSLASH_N (select a.rowkey rowkey, content_type, sp_app_id, first_exp_d, first_exp_1d, first_exp_7dTOK_BACKSLASH_N fromTOK_BACKSLASH_N (select rowkey, content_typeTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_video_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_fst_filter = 1 and from_unixtime(cast(substr(timestamp_pop_fst_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N ) aTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (select rowkey, sp_app_id,TOK_BACKSLASH_N sum(case when p_date=20200630 then maintl_exp_cnt+floatlayer_exp_cnt else 0 end) first_exp_d, -- 当天TOK_BACKSLASH_N sum(case when p_date=date_sub(20200630, 1) then maintl_exp_cnt+floatlayer_exp_cnt else 0 end) first_exp_1d, -- 前一天TOK_BACKSLASH_N sum(maintl_exp_cnt+floatlayer_exp_cnt) first_exp_7d -- 过去7天TOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_video_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date between date_sub(20200630, 6) and 20200630TOK_BACKSLASH_N group by rowkey, sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.rowkey = b.rowkeyTOK_BACKSLASH_N ) m TOK_BACKSLASH_N where sp_app_id is not nullTOK_BACKSLASH_N group by sp_app_id, content_typeTOK_BACKSLASH_N ) p TOK_BACKSLASH_N left joinTOK_BACKSLASH_N (-- 二次popTOK_BACKSLASH_N select sp_app_id, TOK_BACKSLASH_N content_type,TOK_BACKSLASH_N sum(second_exp_d) second_low_exp,TOK_BACKSLASH_N sum(second_exp_3d) second_low_exp_3d,TOK_BACKSLASH_N sum(second_exp_7d) second_low_exp_7dTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, content_typeTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_video_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_sec_filter = 1 and from_unixtime(cast(substr(timestamp_pop_sec_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N ) aTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (select rowkey, sp_app_id,TOK_BACKSLASH_N sum(case when p_date=20200630 then maintl_exp_cnt+floatlayer_exp_cnt else 0 end) second_exp_d, -- 当天TOK_BACKSLASH_N sum(case when p_date between date_sub(20200630, 3) and date_sub(20200630, 1) then maintl_exp_cnt+floatlayer_exp_cnt else 0 end) second_exp_3d, -- 前三天TOK_BACKSLASH_N sum(maintl_exp_cnt+floatlayer_exp_cnt) second_exp_7d -- 过去7天TOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_video_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date between date_sub(20200630, 6) and 20200630TOK_BACKSLASH_N group by rowkey, sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.rowkey = b.rowkeyTOK_BACKSLASH_N group by sp_app_id, content_typeTOK_BACKSLASH_N ) q TOK_BACKSLASH_N on p.sp_app_id = q.sp_app_id and p.content_type = q.content_typeTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (-- 先发后审，初审下架TOK_BACKSLASH_N select sp_app_id, TOK_BACKSLASH_N content_type,TOK_BACKSLASH_N sum(trd_exp_d) trd_low_exp,TOK_BACKSLASH_N sum(trd_exp_7d) trd_low_exp_7dTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, content_typeTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_video_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (send_audit_type = 4 and metrics_asn_human_pass = 0 and from_unixtime(cast(substr(timestamp_asn_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630)TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N ) aTOK_BACKSLASH_N left joinTOK_BACKSLASH_N (select rowkey, sp_app_id,TOK_BACKSLASH_N sum(case when p_date=20200630 then maintl_exp_cnt+floatlayer_exp_cnt else 0 end) trd_exp_d, -- 当天TOK_BACKSLASH_N sum(maintl_exp_cnt+floatlayer_exp_cnt) trd_exp_7d -- 过去7天TOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_video_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date between date_sub(20200630, 6) and 20200630TOK_BACKSLASH_N group by rowkey, sp_app_idTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.rowkey = b.rowkeyTOK_BACKSLASH_N group by sp_app_id, content_typeTOK_BACKSLASH_N ) sTOK_BACKSLASH_N on p.sp_app_id = s.sp_app_id and p.content_type = s.content_type TOK_BACKSLASH_N ) a TOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 大盘曝光TOK_BACKSLASH_N (select sp_app_id, content_type, sum(exp) total_expTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, content_typeTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_video_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N ) p TOK_BACKSLASH_N left join TOK_BACKSLASH_N (select sp_app_id, rowkey, maintl_exp_cnt+floatlayer_exp_cnt expTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dwt_consume_video_rowkeyperformance_normal_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N ) q TOK_BACKSLASH_N on p.rowkey = q.rowkey TOK_BACKSLASH_N group by sp_app_id, content_typeTOK_BACKSLASH_N ) b TOK_BACKSLASH_N on a.sp_app_id = b.sp_app_id and a.content_type = b.content_typeTOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 低质曝光uvTOK_BACKSLASH_N (select sp_app_id, content_type, exp_uvTOK_BACKSLASH_N from TOK_BACKSLASH_N (select TOK_SINGLE_QUOTEkdTOK_SINGLE_QUOTE sp_app_id, content_type, exp_uv TOK_BACKSLASH_N from sng_mp_etldata::dwa_cc_kd_low_exp_uv_okr_dailyTOK_BACKSLASH_N where f_date = 20200630TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N and low_type = TOK_SINGLE_QUOTE1TOK_SINGLE_QUOTETOK_BACKSLASH_N union all TOK_BACKSLASH_N select TOK_SINGLE_QUOTEkbTOK_SINGLE_QUOTE sp_app_id, content_type, exp_uvTOK_BACKSLASH_N from sng_mp_etldata::dwa_cc_kb_low_exp_uv_okr_dailyTOK_BACKSLASH_N where f_date = 20200630TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N and low_type = TOK_SINGLE_QUOTE1TOK_SINGLE_QUOTETOK_BACKSLASH_N union all TOK_BACKSLASH_N select TOK_SINGLE_QUOTEqbTOK_SINGLE_QUOTE sp_app_id, content_type, exp_uv TOK_BACKSLASH_N from sng_mp_etldata::dwa_cc_qb_low_exp_uv_okr_dailyTOK_BACKSLASH_N where f_date = 20200630TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N and low_type = TOK_SINGLE_QUOTE1TOK_SINGLE_QUOTETOK_BACKSLASH_N )TOK_BACKSLASH_N ) c TOK_BACKSLASH_N on a.sp_app_id = c.sp_app_id and a.content_type = c.content_typeTOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 一次pop下架内容数、审核时长 TOK_BACKSLASH_N (select 20200630 f_date,TOK_BACKSLASH_N count(distinct rowkey) first_pop_cnt, TOK_BACKSLASH_N NVL(round(sum(duration_pop_fst_audit)/1000, 1), 0.0) first_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, duration_pop_fst_auditTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_video_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_fst_filter = 1 and from_unixtime(cast(substr(timestamp_pop_fst_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N ) TOK_BACKSLASH_N ) d TOK_BACKSLASH_N on a.f_date = d.f_dateTOK_BACKSLASH_N left joinTOK_BACKSLASH_N -- 二次pop下架内容数、审核时长 TOK_BACKSLASH_N (select 20200630 f_date,TOK_BACKSLASH_N count(distinct rowkey) second_pop_cnt, TOK_BACKSLASH_N NVL(round(sum(duration_pop_sec_audit)/1000, 1), 0.0) second_pop_timeTOK_BACKSLASH_N from TOK_BACKSLASH_N (select rowkey, duration_pop_sec_auditTOK_BACKSLASH_N from pcg_txkd_shared_data_app::t_dim_fcc_b_video_rowkey_acc_dTOK_BACKSLASH_N where p_date = 20200630TOK_BACKSLASH_N and (metrics_pop_sec_filter = 1 and from_unixtime(cast(substr(timestamp_pop_sec_end,1,10)as bigint),TOK_SINGLE_QUOTEyyyyMMddTOK_SINGLE_QUOTE) = 20200630) TOK_BACKSLASH_N and st_kd = 0TOK_BACKSLASH_N and content_type in (TOK_SINGLE_QUOTE短视频TOK_SINGLE_QUOTE,TOK_SINGLE_QUOTE小视频TOK_SINGLE_QUOTE)TOK_BACKSLASH_N ) TOK_BACKSLASH_N ) e TOK_BACKSLASH_N on a.f_date = e.f_date TOK_BACKSLASH_N )'

    sql_out = clean_sql_comments(sql_in)
    print(sql_out)

    pass


if __name__ == '__main__':
    config_path = os.getcwd() + '/../james_config/james_config.conf'
    CO = configobj.ConfigObj(config_path)

    DB_HOST = CO['LOCAL_DB']['host']
    DB_USER = CO['LOCAL_DB']['user']
    DB_PASSWD = CO['LOCAL_DB']['passwd']
    DB_DB = CO['LOCAL_DB']['db']
    DB_PORT = CO['LOCAL_DB'].as_int('port')

    DB_CONN = pymysql.connect(host=DB_HOST, user=DB_USER, passwd=DB_PASSWD,
                              db=DB_DB,
                              port=DB_PORT,
                              charset='utf8')

    DB_COR = DB_CONN.cursor()

    main()

    sys.exit(0)
